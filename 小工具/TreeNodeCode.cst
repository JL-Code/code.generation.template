<%@ Template Language="C#" TargetLanguage="C#"  Debug="True" %>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="C#系统类型图" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%-- 参数 --%>
<%@ Property Name="Source" Type="SchemaExplorer.TableSchema" OnChanged="GenerateClassName" Optional="True" Category="参数" Description="DB Schema" %>
<%@ Property Name="ClassName" Type="System.String" Optional="True" Category="参数" Description="类名" %>

public class Code {
    public string GetProductTargetCostAllocationData(Guid projGuid)
    {
        try
        {
            var data = _currService.GetTreeData(projGuid);
            AllocationMaxLevel = data.Max(m => m.Level);
            var treeData = new TreeData<<%=this.ClassName%>Dto, <%=this.ClassName%>Dto>(
                   data,
                   o => string.IsNullOrEmpty(o.ParentCode),
                   (o, parent) => o.ParentCode == parent.SubjectCode,
                   o => o.SubjectCode,
                   Init<%=this.ClassName%>TreeNode);
            var tree = treeData.GetTree();
            return JsonHelper.ObjectToJSON(tree);

        }
        catch (Exception ex)
        {
            Logger.Error(ex.Message, ex);
            var data = TreeNodeEmpty<<%=this.ClassName%>Dto>.ToJson;
            return JsonHelper.ObjectToJSON(data);
        }
    }
    public <%=this.ClassName%>Node Init<%=this.ClassName%>TreeNode(<%=this.ClassName%>Dto option)
    {
        var node = new <%=this.ClassName%>Node
        {
            <%--foreach(ColumnSchema column in this.Source.Columns){%>
            <%= GenerateProperty(column)%>
            <%}--%>
            <%
                var columns = this.Source.Columns;
                for(var i = 0; i < columns.Count; i++){%>
            <%=GenerateProperty(columns[i],i,columns.Count)%>
            <%}%>
        };
        return node;
    }
}

<script runat="template">
public string GenerateProperty(ColumnSchema column,int index,int count){
    var columnName = StringUtil.ToPascalCase(column.Name);
    var str =  columnName+ "= option."+columnName +(index==count-1 ? "" : ",");
    return str;
}
public void GenerateClassName(object sender, EventArgs e){
      var tableName= this.Source.FullName.Replace("dbo.","");
      this.ClassName = tableName.Split('_')[1];
    
}
</script>