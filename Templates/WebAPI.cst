<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Encoding="utf-8" Debug="True"  %>
<%@ Property Name="ClassName" Optional="False" Type="System.String" Category="基本信息" Description="类名称" %>

using System;
using System.Web.Http;
using ZapSoft.BMP.Application;
using ZapSoft.BMP.Application.OperateFunction;
using ZapSoft.Core.Framework;
using ZapSoft.TPS.Application;

namespace ZapSoft.Main.Web.WebApi.TPS.Controllers
{
    public class <%=this.ClassName%>ApiController : ApiController
    {
        private IUnitOfWork _context;
        private I<%=this.ClassName%>Service _currService;

        public <%=this.ClassName%>ApiController(IUnitOfWork context, I<%=this.ClassName%>Service currService)
        {
            _context = context;
            _currService = currService;
        }
        /// <summary>
        /// ../api/MatterApi
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public string Post([FromBody]WorkFlowApprove entity)
        {
            var result = new OperationResult();
            try
            {
                if (entity == null)
                    throw new DataVerificationException("审批操作信息非法！");
                var pwd = MD5.GetMD5(MD5.approveKey + entity.BizGuid.ToString());
                if (entity.PassWord == null || !entity.PassWord.Equals(pwd))
                    throw new DataVerificationException("操作非法！");
                var approveService = _currService as IFlowApprove;
                switch (entity.WFStatus)
                {
                    case WfInstanceStatus.Draft:
                    case WfInstanceStatus.Invalid:
                        approveService.ApproveReject(entity.BizGuid, true);
                        break;
                    case WfInstanceStatus.Handling:
                        approveService.LaunchApprove(entity.BizGuid, true);
                        break;
                    case WfInstanceStatus.Passed:
                        approveService.ApprovePass(entity.BizGuid, true);
                        break;
                    default:
                        throw new DataVerificationException("非法的审批操作，没有对应审批动作！");
                }

                _context.Commite();
                //WfReloadGridUtil.TPS_PlanRealod 特殊  js脚本用于刷新列表 表格等操作
                SignalROperateFunc.OperateFunction(entity.UserGuidList, WfReloadGridUtil.TPS_PlanRealod);
                result.ResultType = OperationResultType.Success;
                result.Message = "操作成功";
            }
            catch (DataVerificationException ex)
            {
                result.ResultType = OperationResultType.Warning;
                result.Message = ex.Message;
            }
            catch (Exception ex)
            {
                _context.RollBackChanges();
                Logger.Error(ex.Message, ex);
                result.Message = "暂时无法完成审批操作，请联系管理员！";
            }
            var data = result.ToJson();
            return data;
        }
    }
}
