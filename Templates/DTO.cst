<%@ CodeTemplate Language="C#" TargetLanguage="C#" Encoding="utf-8" Debug="True"  %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="上下文" Optional="False" %>
<%@ Property Name="ClassName" Optional="False" Type="System.String" Category="基本信息" Description="类名称" %>
<%@ Property Name="ClassNameSpace" Optional="False" Type="System.String" Category="基本信息" Description="命名空间" %>

<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="C#系统类型图" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%-- 注册要生成的模板 --%>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ZapSoft.Core.Framework;

namespace <%= this.ClassNameSpace%>
{
<%--生成制定表的实体类--%>
    public class <%= this.ClassName%>Dto {
            
        <%foreach(ColumnSchema column in this.SourceTable.Columns){%>
        /// <summary>
        /// <%= column.Description%>
        /// </summary>
        <%= GenerateProperty(column)%>
        <%}%>
        
        /// <summary>
        /// 数据状态 (表示数据的 新增 删除 修改 状态)
        /// </summary>
        public OperationState State { get; set; }
    }
}

<script runat="template">
public string GenerateProperty(ColumnSchema column){
    
    var types = new List<string> {"int","DateTime","Guid"};
    var type = CSharpAlias[column.SystemType.FullName];
    var nullSymbol = "";
    var columnName = StringUtil.ToPascalCase(column.Name);
    if(column.AllowDBNull && types.Contains(column.SystemType.Name)){
        nullSymbol = "?";
    }
    return "public "+type+nullSymbol+"  "+columnName+ "{ get; set; }";
}
</script>


